// Code generated by sqlc. DO NOT EDIT.
// source: user.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users_login (email, username, hashed_pass, user_info_id, rv) VALUES ($1,$2,$3,$4,$5) RETURNING id, created_at, updated_at, deleted_at, deleted, rv, email, username, hashed_pass, user_info_id
`

type CreateUserParams struct {
	Email      string        `db:"email" json:"email"`
	Username   string        `db:"username" json:"username"`
	HashedPass string        `db:"hashed_pass" json:"hashed_pass"`
	UserInfoID int64         `db:"user_info_id" json:"user_info_id"`
	Rv         sql.NullInt32 `db:"rv" json:"rv"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (UsersLogin, error) {
	row := q.queryRow(ctx, q.createUserStmt, createUser,
		arg.Email,
		arg.Username,
		arg.HashedPass,
		arg.UserInfoID,
		arg.Rv,
	)
	var i UsersLogin
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.Deleted,
		&i.Rv,
		&i.Email,
		&i.Username,
		&i.HashedPass,
		&i.UserInfoID,
	)
	return i, err
}

const createUserInfo = `-- name: CreateUserInfo :one
INSERT INTO users_info (first_name, last_name) VALUES ($1,$2) RETURNING id, created_at, updated_at, deleted_at, deleted, rv, first_name, last_name, cell_phone, home_phone, work_phone, avatar, work_address, home_address, current_city, current_country, zip_code, national_number, national_card_pic, passport_number_type, passport_pic
`

type CreateUserInfoParams struct {
	FirstName sql.NullString `db:"first_name" json:"first_name"`
	LastName  sql.NullString `db:"last_name" json:"last_name"`
}

func (q *Queries) CreateUserInfo(ctx context.Context, arg CreateUserInfoParams) (UsersInfo, error) {
	row := q.queryRow(ctx, q.createUserInfoStmt, createUserInfo, arg.FirstName, arg.LastName)
	var i UsersInfo
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.Deleted,
		&i.Rv,
		&i.FirstName,
		&i.LastName,
		&i.CellPhone,
		&i.HomePhone,
		&i.WorkPhone,
		&i.Avatar,
		&i.WorkAddress,
		&i.HomeAddress,
		&i.CurrentCity,
		&i.CurrentCountry,
		&i.ZipCode,
		&i.NationalNumber,
		&i.NationalCardPic,
		&i.PassportNumberType,
		&i.PassportPic,
	)
	return i, err
}
