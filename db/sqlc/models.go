// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"time"
)

type Account struct {
	ID            int32          `db:"id" json:"id"`
	BankName      string         `db:"bank_name" json:"bank_name"`
	AccountNumber string         `db:"account_number" json:"account_number"`
	AccountType   string         `db:"account_type" json:"account_type"`
	Isbn          sql.NullString `db:"isbn" json:"isbn"`
	Deleted       sql.NullBool   `db:"deleted" json:"deleted"`
	CreatedAt     time.Time      `db:"created_at" json:"created_at"`
	UpdatedAt     sql.NullTime   `db:"updated_at" json:"updated_at"`
	DeletedAt     sql.NullTime   `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type AccountsAll struct {
	ID          int32         `db:"id" json:"id"`
	AccountMain sql.NullInt64 `db:"account_main" json:"account_main"`
	Account2    sql.NullInt64 `db:"account_2" json:"account_2"`
	Account3    sql.NullInt64 `db:"account_3" json:"account_3"`
	Account4    sql.NullInt64 `db:"account_4" json:"account_4"`
	Account5    sql.NullInt64 `db:"account_5" json:"account_5"`
	Deleted     sql.NullBool  `db:"deleted" json:"deleted"`
	CreatedAt   time.Time     `db:"created_at" json:"created_at"`
	UpdatedAt   sql.NullTime  `db:"updated_at" json:"updated_at"`
	DeletedAt   sql.NullTime  `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type App struct {
	ID         int32         `db:"id" json:"id"`
	AppName    string        `db:"app_name" json:"app_name"`
	IndustryID sql.NullInt64 `db:"industry_id" json:"industry_id"`
	CompanyID  sql.NullInt64 `db:"company_id" json:"company_id"`
	TeamID     sql.NullInt64 `db:"team_id" json:"team_id"`
	Web        sql.NullBool  `db:"web" json:"web"`
	Ios        sql.NullBool  `db:"ios" json:"ios"`
	Android    sql.NullBool  `db:"android" json:"android"`
	Desktop    sql.NullBool  `db:"desktop" json:"desktop"`
	Paid       sql.NullBool  `db:"paid" json:"paid"`
	Deleted    sql.NullBool  `db:"deleted" json:"deleted"`
	CreatedAt  time.Time     `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime  `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime  `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type Company struct {
	ID          int32          `db:"id" json:"id"`
	CompanyName string         `db:"company_name" json:"company_name"`
	IndustryID  sql.NullInt64  `db:"industry_id" json:"industry_id"`
	AppID       sql.NullInt64  `db:"app_id" json:"app_id"`
	TeamID      sql.NullInt64  `db:"team_id" json:"team_id"`
	AccountID   sql.NullInt64  `db:"account_id" json:"account_id"`
	Ceo         sql.NullInt64  `db:"ceo" json:"ceo"`
	Manager     sql.NullInt64  `db:"manager" json:"manager"`
	Hr          sql.NullInt64  `db:"hr" json:"hr"`
	Cto         sql.NullInt64  `db:"cto" json:"cto"`
	Country     sql.NullString `db:"country" json:"country"`
	// which? asia , euro, america ...
	Region    sql.NullString `db:"region" json:"region"`
	Address   sql.NullString `db:"address" json:"address"`
	HowClean  string         `db:"how_clean" json:"how_clean"`
	Deleted   sql.NullBool   `db:"deleted" json:"deleted"`
	CreatedAt time.Time      `db:"created_at" json:"created_at"`
	UpdatedAt sql.NullTime   `db:"updated_at" json:"updated_at"`
	DeletedAt sql.NullTime   `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type Cred struct {
	ID         int32         `db:"id" json:"id"`
	HashedPass string        `db:"hashed_pass" json:"hashed_pass"`
	Deleted    sql.NullBool  `db:"deleted" json:"deleted"`
	CreatedAt  time.Time     `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime  `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime  `db:"deleted_at" json:"deleted_at"`
	Rv         sql.NullInt32 `db:"rv" json:"rv"`
}

type Industry struct {
	ID           int32        `db:"id" json:"id"`
	IndustryName string       `db:"industry_name" json:"industry_name"`
	HowClean     string       `db:"how_clean" json:"how_clean"`
	Deleted      sql.NullBool `db:"deleted" json:"deleted"`
	CreatedAt    time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt    sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt    sql.NullTime `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type Role struct {
	ID        int32        `db:"id" json:"id"`
	RoleName  string       `db:"role_name" json:"role_name"`
	Deleted   sql.NullBool `db:"deleted" json:"deleted"`
	CreatedAt time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt sql.NullTime `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type Team struct {
	ID         int32         `db:"id" json:"id"`
	TeamName   string        `db:"team_name" json:"team_name"`
	AccountID  sql.NullInt64 `db:"account_id" json:"account_id"`
	Leader     sql.NullInt64 `db:"leader" json:"leader"`
	Observer   sql.NullInt64 `db:"observer" json:"observer"`
	Hr         sql.NullInt64 `db:"hr" json:"hr"`
	TechGuy    sql.NullInt64 `db:"tech_guy" json:"tech_guy"`
	IndustryID int64         `db:"industry_id" json:"industry_id"`
	Deleted    sql.NullBool  `db:"deleted" json:"deleted"`
	CreatedAt  time.Time     `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime  `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime  `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type User struct {
	ID       int32  `db:"id" json:"id"`
	Email    string `db:"email" json:"email"`
	Username string `db:"username" json:"username"`
	// one to one
	UserInfoID int64 `db:"user_info_id" json:"user_info_id"`
	// one to one, cred contain deleted ones
	CredID int64 `db:"cred_id" json:"cred_id"`
	// many to one, role is parent
	RoleID sql.NullInt64 `db:"role_id" json:"role_id"`
	// many to one, team is parent
	TeamID sql.NullInt64 `db:"team_id" json:"team_id"`
	// one to many, user is parent
	AccountID sql.NullInt64 `db:"account_id" json:"account_id"`
	AppsID    int64         `db:"apps_id" json:"apps_id"`
	CompanyID sql.NullInt64 `db:"company_id" json:"company_id"`
	Deleted   sql.NullBool  `db:"deleted" json:"deleted"`
	CreatedAt time.Time     `db:"created_at" json:"created_at"`
	UpdatedAt sql.NullTime  `db:"updated_at" json:"updated_at"`
	DeletedAt sql.NullTime  `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type UsersInfo struct {
	ID                 int32          `db:"id" json:"id"`
	FirstName          string         `db:"first_name" json:"first_name"`
	LastName           string         `db:"last_name" json:"last_name"`
	Dob                time.Time      `db:"dob" json:"dob"`
	CompanyID          sql.NullInt64  `db:"company_id" json:"company_id"`
	OrgPosition        sql.NullString `db:"org_position" json:"org_position"`
	TeamID             sql.NullInt64  `db:"team_id" json:"team_id"`
	CellPhone          sql.NullString `db:"cell_phone" json:"cell_phone"`
	HomePhone          sql.NullString `db:"home_phone" json:"home_phone"`
	WorkPhone          sql.NullString `db:"work_phone" json:"work_phone"`
	Avatar             sql.NullString `db:"avatar" json:"avatar"`
	WorkAddress        sql.NullString `db:"work_address" json:"work_address"`
	HomeAddress        sql.NullString `db:"home_address" json:"home_address"`
	CurrentCity        sql.NullString `db:"current_city" json:"current_city"`
	CurrentCountry     sql.NullString `db:"current_country" json:"current_country"`
	ZipCode            sql.NullString `db:"zip_code" json:"zip_code"`
	NationalNumber     sql.NullString `db:"national_number" json:"national_number"`
	NationalCardPic    sql.NullString `db:"national_card_pic" json:"national_card_pic"`
	PassportNumberType sql.NullString `db:"passport_number_type" json:"passport_number_type"`
	PassportPic        sql.NullString `db:"passport_pic" json:"passport_pic"`
	Deleted            sql.NullBool   `db:"deleted" json:"deleted"`
	CreatedAt          time.Time      `db:"created_at" json:"created_at"`
	UpdatedAt          sql.NullTime   `db:"updated_at" json:"updated_at"`
	DeletedAt          sql.NullTime   `db:"deleted_at" json:"deleted_at"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}
