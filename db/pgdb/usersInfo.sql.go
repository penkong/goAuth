// Code generated by sqlc. DO NOT EDIT.
// source: usersInfo.sql

package pgdb

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createUserInfoBasic = `-- name: CreateUserInfoBasic :one
INSERT INTO 
  users_info(first_name, last_name, dob, rv)
VALUES 
  ($1, $2, $3, $4) RETURNING user_info_id, created_at
`

type CreateUserInfoBasicParams struct {
	FirstName sql.NullString `db:"first_name" json:"first_name"`
	LastName  sql.NullString `db:"last_name" json:"last_name"`
	Dob       time.Time      `db:"dob" json:"dob"`
	Rv        int32          `db:"rv" json:"rv"`
}

type CreateUserInfoBasicRow struct {
	UserInfoID uuid.UUID `db:"user_info_id" json:"user_info_id"`
	CreatedAt  time.Time `db:"created_at" json:"created_at"`
}

func (q *Queries) CreateUserInfoBasic(ctx context.Context, arg CreateUserInfoBasicParams) (CreateUserInfoBasicRow, error) {
	row := q.queryRow(ctx, q.createUserInfoBasicStmt, createUserInfoBasic,
		arg.FirstName,
		arg.LastName,
		arg.Dob,
		arg.Rv,
	)
	var i CreateUserInfoBasicRow
	err := row.Scan(&i.UserInfoID, &i.CreatedAt)
	return i, err
}

const getUserInfoBasic = `-- name: GetUserInfoBasic :one
SELECT 
  user_info_id, first_name, last_name, dob, cell_phone, home_phone, work_phone, avatar, banner, bio, work_address, home_address, current_city, born_country, living_country, current_country, zip_code, national_number, national_card_pic, passport_number_type, passport_pic, created_at, updated_at, deleted_at, deleted, rv
FROM 
  users_info 
WHERE 
  user_info_id = $1 AND deleted = false
`

func (q *Queries) GetUserInfoBasic(ctx context.Context, userInfoID uuid.UUID) (UsersInfo, error) {
	row := q.queryRow(ctx, q.getUserInfoBasicStmt, getUserInfoBasic, userInfoID)
	var i UsersInfo
	err := row.Scan(
		&i.UserInfoID,
		&i.FirstName,
		&i.LastName,
		&i.Dob,
		&i.CellPhone,
		&i.HomePhone,
		&i.WorkPhone,
		&i.Avatar,
		&i.Banner,
		&i.Bio,
		&i.WorkAddress,
		&i.HomeAddress,
		&i.CurrentCity,
		&i.BornCountry,
		&i.LivingCountry,
		&i.CurrentCountry,
		&i.ZipCode,
		&i.NationalNumber,
		&i.NationalCardPic,
		&i.PassportNumberType,
		&i.PassportPic,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.Deleted,
		&i.Rv,
	)
	return i, err
}
