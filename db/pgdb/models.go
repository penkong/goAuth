// Code generated by sqlc. DO NOT EDIT.

package pgdb

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type App struct {
	AppID      int64        `db:"app_id" json:"app_id"`
	App        string       `db:"app" json:"app"`
	AppBaseOs  string       `db:"app_base_os" json:"app_base_os"`
	Desktop    sql.NullBool `db:"desktop" json:"desktop"`
	Web        sql.NullBool `db:"web" json:"web"`
	Mobile     sql.NullBool `db:"mobile" json:"mobile"`
	Ios        sql.NullBool `db:"ios" json:"ios"`
	Android    sql.NullBool `db:"android" json:"android"`
	Pwa        sql.NullBool `db:"pwa" json:"pwa"`
	Paid       sql.NullBool `db:"paid" json:"paid"`
	IndustryID int64        `db:"industry_id" json:"industry_id"`
	CreatedAt  time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted    sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type BankAccount struct {
	BankAccountID int64        `db:"bank_account_id" json:"bank_account_id"`
	Bank          string       `db:"bank" json:"bank"`
	AccountNumber string       `db:"account_number" json:"account_number"`
	AccountType   string       `db:"account_type" json:"account_type"`
	Isbn          string       `db:"isbn" json:"isbn"`
	CreatedAt     time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt     sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt     sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted       sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type BankAccountAll struct {
	BankAccountAllID uuid.UUID     `db:"bank_account_all_id" json:"bank_account_all_id"`
	Account1         sql.NullInt64 `db:"account_1" json:"account_1"`
	Account2         sql.NullInt64 `db:"account_2" json:"account_2"`
	Account3         sql.NullInt64 `db:"account_3" json:"account_3"`
	Account4         sql.NullInt64 `db:"account_4" json:"account_4"`
	Account5         sql.NullInt64 `db:"account_5" json:"account_5"`
	CreatedAt        time.Time     `db:"created_at" json:"created_at"`
	UpdatedAt        sql.NullTime  `db:"updated_at" json:"updated_at"`
	DeletedAt        sql.NullTime  `db:"deleted_at" json:"deleted_at"`
	Deleted          sql.NullBool  `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type BusinessLog struct {
	BusinessLogID int64  `db:"business_log_id" json:"business_log_id"`
	Event         string `db:"event" json:"event"`
	Device        string `db:"device" json:"device"`
	Os            string `db:"os" json:"os"`
	Ip            string `db:"ip" json:"ip"`
	Agent         string `db:"agent" json:"agent"`
	// maybe is it a guest
	PositionID sql.NullInt64 `db:"position_id" json:"position_id"`
	// maybe is it a guest
	CompanyID sql.NullInt64 `db:"company_id" json:"company_id"`
	// maybe is it a guest
	RoleID int64 `db:"role_id" json:"role_id"`
	// maybe is it a guest
	TeamID sql.NullInt64 `db:"team_id" json:"team_id"`
	// maybe is it a guest
	AppID int64 `db:"app_id" json:"app_id"`
	// maybe is it a guest
	Creator   uuid.UUID `db:"creator" json:"creator"`
	CreatedAt time.Time `db:"created_at" json:"created_at"`
}

type Company struct {
	CompanyID int32  `db:"company_id" json:"company_id"`
	Company   string `db:"company" json:"company"`
	Bio       string `db:"bio" json:"bio"`
	Country   string `db:"country" json:"country"`
	// which continental?
	Region           string         `db:"region" json:"region"`
	Ceo              sql.NullString `db:"ceo" json:"ceo"`
	Manager          sql.NullString `db:"manager" json:"manager"`
	Hr               sql.NullString `db:"hr" json:"hr"`
	Address          string         `db:"address" json:"address"`
	HowClean         int32          `db:"how_clean" json:"how_clean"`
	IndustryID       int64          `db:"industry_id" json:"industry_id"`
	BankAccountAllID uuid.UUID      `db:"bank_account_all_id" json:"bank_account_all_id"`
	CreatedAt        time.Time      `db:"created_at" json:"created_at"`
	UpdatedAt        sql.NullTime   `db:"updated_at" json:"updated_at"`
	DeletedAt        sql.NullTime   `db:"deleted_at" json:"deleted_at"`
	Deleted          sql.NullBool   `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type Cred struct {
	CredID     uuid.UUID    `db:"cred_id" json:"cred_id"`
	HashedPass string       `db:"hashed_pass" json:"hashed_pass"`
	CreatedAt  time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted    sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type Industry struct {
	IndustryID int64        `db:"industry_id" json:"industry_id"`
	Industry   string       `db:"industry" json:"industry"`
	HowClean   int32        `db:"how_clean" json:"how_clean"`
	CreatedAt  time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted    sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type Position struct {
	PositionID int64        `db:"position_id" json:"position_id"`
	Department string       `db:"department" json:"department"`
	Position   string       `db:"position" json:"position"`
	CreatedAt  time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted    sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type Role struct {
	RoleID    int64        `db:"role_id" json:"role_id"`
	Role      string       `db:"role" json:"role"`
	CreatedAt time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted   sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type Status struct {
	StatusID  int64        `db:"status_id" json:"status_id"`
	Status    string       `db:"status" json:"status"`
	CreatedAt time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted   sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type Team struct {
	TeamID     int64        `db:"team_id" json:"team_id"`
	Team       string       `db:"team" json:"team"`
	IndustryID int64        `db:"industry_id" json:"industry_id"`
	CreatedAt  time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted    sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type TeamsAppsCompany struct {
	TeamAppCompanyID int64         `db:"team_app_company_id" json:"team_app_company_id"`
	TeamID           sql.NullInt64 `db:"team_id" json:"team_id"`
	AppID            sql.NullInt64 `db:"app_id" json:"app_id"`
	CompanyID        sql.NullInt64 `db:"company_id" json:"company_id"`
	CreatedAt        time.Time     `db:"created_at" json:"created_at"`
	UpdatedAt        sql.NullTime  `db:"updated_at" json:"updated_at"`
	DeletedAt        sql.NullTime  `db:"deleted_at" json:"deleted_at"`
	Deleted          sql.NullBool  `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv sql.NullInt32 `db:"rv" json:"rv"`
}

type User struct {
	UserID   uuid.UUID `db:"user_id" json:"user_id"`
	Email    string    `db:"email" json:"email"`
	Username string    `db:"username" json:"username"`
	StatusID int64     `db:"status_id" json:"status_id"`
	// one to one, cred contain deleted ones
	CredID uuid.UUID `db:"cred_id" json:"cred_id"`
	// one to many, user is parent
	BankAccountAllID uuid.UUID `db:"bank_account_all_id" json:"bank_account_all_id"`
	// one to one
	UserInfoID uuid.UUID    `db:"user_info_id" json:"user_info_id"`
	CreatedAt  time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt  sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt  sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted    sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type UserLog struct {
	UserLogsID int64     `db:"user_logs_id" json:"user_logs_id"`
	Event      string    `db:"event" json:"event"`
	Device     string    `db:"device" json:"device"`
	Os         string    `db:"os" json:"os"`
	Ip         string    `db:"ip" json:"ip"`
	Agent      string    `db:"agent" json:"agent"`
	PositionID int64     `db:"position_id" json:"position_id"`
	CompanyID  int64     `db:"company_id" json:"company_id"`
	RoleID     int64     `db:"role_id" json:"role_id"`
	TeamID     int64     `db:"team_id" json:"team_id"`
	AppID      int64     `db:"app_id" json:"app_id"`
	Creator    uuid.UUID `db:"creator" json:"creator"`
	CreatedAt  time.Time `db:"created_at" json:"created_at"`
}

type UsersInfo struct {
	UserInfoID         uuid.UUID      `db:"user_info_id" json:"user_info_id"`
	FirstName          sql.NullString `db:"first_name" json:"first_name"`
	LastName           sql.NullString `db:"last_name" json:"last_name"`
	Dob                time.Time      `db:"dob" json:"dob"`
	CellPhone          sql.NullString `db:"cell_phone" json:"cell_phone"`
	HomePhone          sql.NullString `db:"home_phone" json:"home_phone"`
	WorkPhone          sql.NullString `db:"work_phone" json:"work_phone"`
	Avatar             sql.NullString `db:"avatar" json:"avatar"`
	Banner             sql.NullString `db:"banner" json:"banner"`
	Bio                sql.NullString `db:"bio" json:"bio"`
	WorkAddress        sql.NullString `db:"work_address" json:"work_address"`
	HomeAddress        sql.NullString `db:"home_address" json:"home_address"`
	CurrentCity        sql.NullString `db:"current_city" json:"current_city"`
	BornCountry        sql.NullString `db:"born_country" json:"born_country"`
	LivingCountry      sql.NullString `db:"living_country" json:"living_country"`
	CurrentCountry     sql.NullString `db:"current_country" json:"current_country"`
	ZipCode            sql.NullString `db:"zip_code" json:"zip_code"`
	NationalNumber     sql.NullString `db:"national_number" json:"national_number"`
	NationalCardPic    sql.NullString `db:"national_card_pic" json:"national_card_pic"`
	PassportNumberType sql.NullString `db:"passport_number_type" json:"passport_number_type"`
	PassportPic        sql.NullString `db:"passport_pic" json:"passport_pic"`
	CreatedAt          time.Time      `db:"created_at" json:"created_at"`
	UpdatedAt          sql.NullTime   `db:"updated_at" json:"updated_at"`
	DeletedAt          sql.NullTime   `db:"deleted_at" json:"deleted_at"`
	Deleted            sql.NullBool   `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type UsersRolesAppsCompany struct {
	UserRoleAppCompanyID int64        `db:"user_role_app_company_id" json:"user_role_app_company_id"`
	UserID               uuid.UUID    `db:"user_id" json:"user_id"`
	RoleID               int64        `db:"role_id" json:"role_id"`
	AppID                int64        `db:"app_id" json:"app_id"`
	CompanyID            int64        `db:"company_id" json:"company_id"`
	CreatedAt            time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt            sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt            sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted              sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}

type UsersRolesAppsPositionsTeamsCompany struct {
	UserRoleAppPositionTeamCompanyID int64        `db:"user_role_app_position_team_company_id" json:"user_role_app_position_team_company_id"`
	UserID                           uuid.UUID    `db:"user_id" json:"user_id"`
	RoleID                           int64        `db:"role_id" json:"role_id"`
	AppID                            int64        `db:"app_id" json:"app_id"`
	PositionID                       int64        `db:"position_id" json:"position_id"`
	TeamID                           int64        `db:"team_id" json:"team_id"`
	CompanyID                        int64        `db:"company_id" json:"company_id"`
	CreatedAt                        time.Time    `db:"created_at" json:"created_at"`
	UpdatedAt                        sql.NullTime `db:"updated_at" json:"updated_at"`
	DeletedAt                        sql.NullTime `db:"deleted_at" json:"deleted_at"`
	Deleted                          sql.NullBool `db:"deleted" json:"deleted"`
	// use for handle hybrid concurrncy
	Rv int32 `db:"rv" json:"rv"`
}
